Behavior Driven Development

Description of BDD
- domain-driven design

Principles of BDD
- Enough is enough
- Deliver stakeholder value

Automated scenarios and acceptance tests

The BDD Cycle
- red/green/refactor

Planning the First Release
- selecting stories
-- Code-breaker starts game
-- Code-breaker submits guess
-- Code-breaker wins game
-- Code-breaker loses game
-- Code-breaker plays again
-- Code-breaker saves score

User stories are a planning tool
- have business value
- be testable
- be small enough to implement in one iteration

Planning first iteration
- Acceptance Criteria       
- an example
Feature: code-breaker starts game

  As a code-breaker
  I want to start a game
  So that I can break the code

  Scenario: start game
    Given I am not yet playing
    When I start a new game
    Then I should see "Welcome to Codebreaker!"
    And I should see "Enter guess:"

Given steps represent the state of the world before an event. 
When steps represent the event. 
Then steps represent the expected outcomes.
              
Cucumber DRYing
- Scenario Outlines

Scenario Outline: submit guess
  Given the secret code is <code>
  When I guess <guess>
  Then the mark should be <mark>

The Scenarios keyword indicates that what follows are rows of example
data.

Scenarios: all colors correct
| code    | guess   | mark |
| r g y c | r g y c | bbbb |
| r g y c | r g c y | bbww |
| r g y c | y r g c | bwww |
| r g y c | c r g y | wwww |

